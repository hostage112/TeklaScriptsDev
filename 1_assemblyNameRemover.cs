// Generated by Tekla.Technology.Akit.ScriptBuilder
using System.Collections;
using Tekla.Structures;
using Tekla.Structures.Model;
using TSM = Tekla.Structures.Model;
using Tekla.Structures.Model.UI;
using System.Windows.Forms;


namespace Tekla.Technology.Akit.UserScript
{
    public class Script
    {
        public static void Run(Tekla.Technology.Akit.IScript akit)
        {
            Model myModel = new Model();
            ModelObjectEnumerator selectedObjects = getSelectedObjects();
            ArrayList selectedAssemblys = getSelectedAssemblys(selectedObjects);

            foreach (Assembly currentAssembly in selectedAssemblys)
            {
                assemblyManager(currentAssembly, akit);
            }
        }

        private static void assemblyManager(Assembly currentAssembly, Tekla.Technology.Akit.IScript akit)
        {
            ArrayList currentSelection = new ArrayList();
            currentSelection.Add(currentAssembly);

            var ModelSelector = new TSM.UI.ModelObjectSelector();
            ModelSelector.Select(currentSelection);

            removeAssemblyPropertys(currentAssembly, akit);

            ArrayList subs = currentAssembly.GetSubAssemblies();
            foreach (Assembly sub in subs)
            {
                assemblyManager(sub, akit);
            }
        }

        private static void removeAssemblyPropertys(Assembly currentAssembly, Tekla.Technology.Akit.IScript akit)
        {
            akit.Callback("acmd_display_selected_object_dialog", "", "View_01 window_1");
            Part currentMainPart = currentAssembly.GetMainPart() as Part;

            if (!currentMainPart.Material.MaterialString.StartsWith("C"))
            {
                akit.ValueChange("steelassembly_1", "AssemblyPrefix", "");
                akit.ValueChange("steelassembly_1", "AssemblyStartNumber", "");
                akit.ValueChange("steelassembly_1", "AssemblyName", "");
                akit.PushButton("modify_button", "steelassembly_1");
                akit.PushButton("OK_button", "steelassembly_1");
            }
            else
            {
                if (currentMainPart.CastUnitType == 0)
                {
                    akit.ValueChange("precastassembly_1", "AssemblyPrefix", "");
                    akit.ValueChange("precastassembly_1", "AssemblyStartNumber", "");
                    akit.ValueChange("precastassembly_1", "AssemblyName", "");
                    akit.PushButton("modify_button", "precastassembly_1");
                    akit.PushButton("OK_button", "precastassembly_1");
                }
                else
                {
                    akit.ValueChange("insituassembly_1", "AssemblyPrefix", "");
                    akit.ValueChange("insituassembly_1", "AssemblyStartNumber", "");
                    akit.ValueChange("insituassembly_1", "AssemblyName", "");
                    akit.PushButton("modify_button", "insituassembly_1");
                    akit.PushButton("OK_button", "insituassembly_1");
                }
            }
        }

        private static ModelObjectEnumerator getSelectedObjects()
        {
            var selector = new TSM.UI.ModelObjectSelector();
            ModelObjectEnumerator selectionEnum = selector.GetSelectedObjects();

            return selectionEnum;
        }

        private static ArrayList getSelectedAssemblys(ModelObjectEnumerator selectedObjects)
        {
            ArrayList selectedAssemblys = new ArrayList();

            while (selectedObjects.MoveNext())
            {
                if (selectedObjects.Current is Assembly)
                {
                    selectedAssemblys.Add(selectedObjects.Current as Assembly);
                }
            }

            return selectedAssemblys;
        }
    }
}
